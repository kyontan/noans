%script(type = "text/x-mathjax-config")
	:plain
		MathJax.Hub.Config({
			tex2jax:{
				inlineMath: 	[["\\$","$"]],
				displayMath:	[["\\[","]"]]
			},
			skipStartupTypeset: true,
			extensions: ["tex2jax.js","Safe.js"]
		});
%script(src = "http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_HTML&locale=ja")

%script{src: to("/js/marked.js")}
:javascript
	marked.setOptions({
		gfm: true,
		tables: true,
		breaks: false,
		pedantic: false,
		sanitize: false,
		smartLists: true,
		smartypants: false,
		langPrefix: 'language-',
		highlight: function(code, lang) { return code; }
	});

:javascript
	var escapeRules = {
	  "&": "&amp;",
	  '"': "&quot;",
	  "<": "&lt;",
	  ">": "&gt;"
	};

	function escapeHTML(s) {
	  return s.replace(/[&"<>]/g, function(c){
	    return escapeRules[c];
	  });
	}

	$(function(){
		var file = "#{to("/file/" + @file.id.to_s + ?/)}";

		$.get(file, function(text){

			var $markdown = $(".markdown");
			$markdown.html(escapeHTML(text));

			MathJax.Hub.Queue(["Typeset", MathJax.Hub, "mathjax"], function(){
				$markdown.html(marked($markdown.html()));
			});
		});
	});

%section.border#markdown-preview
	%a#link{href("/file/#{@file.id}/#{URI.escape @file.orig_file_name}")}= @file.orig_file_name
	Uploaded at&nbsp;
	%time>= @file.created_at.strftime("%Y/%m/%d %H:%m")
	%hr
	%section.markdown#mathjax
